# Config file for the @PROJECT_NAME@ package
# Defines the following variables:
#
#  @PNAME@_INCLUDE_DIRS - include directories
#  @PNAME@_DEFINITIONS  - preprocessor definitions
#  @PNAME@_LIBRARIES    - libraries to link against
#
# Also defines @PROJECT_NAME@ third-party library dependencies:
#  @PNAME@_TPLS             - package names of  third-party library dependencies
#  @PNAME@_TPL_INCLUDE_DIRS - include directories
#  @PNAME@_TPL_DEFINITIONS  - preprocessor definitions
#  @PNAME@_TPL_LIBRARIES    - libraries to link against

# compute paths

get_filename_component(@PNAME@_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

set( @PNAME@_SELF_INCLUDE_DIRS "@CONF_INCLUDE_DIRS@" )
set( @PNAME@_SELF_DEFINITIONS  "@CONF_DEFINITIONS@" )
set( @PNAME@_SELF_LIBRARIES    "@CONF_LIBRARIES@" )

set( @PNAME@_TPLS             "@CONF_TPLS@" )

set( @PNAME@_TPL_INCLUDE_DIRS "@CONF_TPL_INCLUDE_DIRS@" )
set( @PNAME@_TPL_DEFINITIONS  "@CONF_TPL_DEFINITIONS@" )
set( @PNAME@_TPL_LIBRARIES    "@CONF_TPL_LIBRARIES@" )

# include paths as absolute paths
set( @PNAME@_INCLUDE_DIRS "" )
foreach( path ${@PNAME@_SELF_INCLUDE_DIRS} )
	get_filename_component( abspath ${path} ABSOLUTE )
	list( APPEND @PNAME@_INCLUDE_DIRS ${abspath} )
endforeach()
list( APPEND @PNAME@_INCLUDE_DIRS ${@PNAME@_TPL_INCLUDE_DIRS} )

set( @PNAME@_DEFINITIONS      ${@PNAME@_SELF_DEFINITIONS} ${@PNAME@_TPL_DEFINITIONS} )
set( @PNAME@_LIBRARIES        ${@PNAME@_SELF_LIBRARIES}  ${@PNAME@_TPL_LIBRARIES} )

# insert definitions for IMPORTED targets

if( NOT @PROJECT_NAME@_BINARY_DIR )
  include( "@TOP_PROJECT_TARGETS_FILE@" OPTIONAL )
endif()

# here goes the imports of the TPL's

include( ${CMAKE_CURRENT_LIST_FILE}.tpls OPTIONAL )

# publish this file as imported

set( @PNAME@_IMPORT_FILE ${CMAKE_CURRENT_LIST_FILE} )
mark_as_advanced( @PNAME@_IMPORT_FILE )

